/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentation;

import accesBDD.PraticienMySQL;
import accesBDD.VisiteurMySQL;
import java.awt.event.KeyEvent;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import metier.Praticien;
import metier.Visiteur;

/**
 *
 * @author mohamed.boussemaha
 */
public class JffConnexion extends javax.swing.JFrame {
    
    private Praticien lePraticien;
    private Visiteur leVisiteur;
    private int typeUtilisateur = 0;
    private PraticienMySQL praticiens = new PraticienMySQL();
    private VisiteurMySQL visiteurs = new VisiteurMySQL();
    
    /**
     * Constructeur de la classe JffConnexion, qui est une JFrame
     */
    public JffConnexion() {
        initComponents();
        // Mise en place d'un fond blanc
        getContentPane().setBackground(new java.awt.Color(255, 255, 255));
        // Ajout des groupes bouton praticien et visiteur
        ButtonGroup g = new ButtonGroup();
        g.add(jRBPraticien);
        g.add(jRBVisiteur);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtValider = new javax.swing.JButton();
        jBtQuitter = new javax.swing.JButton();
        jLAuthentification = new javax.swing.JLabel();
        jLMail = new javax.swing.JLabel();
        jLMdp = new javax.swing.JLabel();
        jTFMail = new javax.swing.JTextField();
        jPFMdp = new javax.swing.JPasswordField();
        jRBPraticien = new javax.swing.JRadioButton();
        jRBVisiteur = new javax.swing.JRadioButton();
        jLlogo = new javax.swing.JLabel();
        jLFond = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONNEXION");
        setForeground(java.awt.Color.white);
        setResizable(false);
        setSize(new java.awt.Dimension(570, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtValider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/valider.png"))); // NOI18N
        jBtValider.setText("Valider");
        jBtValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtValiderActionPerformed(evt);
            }
        });
        getContentPane().add(jBtValider, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, -1, -1));

        jBtQuitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/quitter.png"))); // NOI18N
        jBtQuitter.setText("Quitter");
        jBtQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtQuitterActionPerformed(evt);
            }
        });
        getContentPane().add(jBtQuitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        jLAuthentification.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLAuthentification.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ecran.png"))); // NOI18N
        jLAuthentification.setText("Authentification");
        getContentPane().add(jLAuthentification, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jLMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/utilisateur.png"))); // NOI18N
        jLMail.setText("Identifiant :");
        getContentPane().add(jLMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        jLMdp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/key.png"))); // NOI18N
        jLMdp.setText("Mot de passe :");
        getContentPane().add(jLMdp, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, -1, -1));

        jTFMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFMailKeyPressed(evt);
            }
        });
        getContentPane().add(jTFMail, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 200, -1));

        jPFMdp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPFMdpKeyPressed(evt);
            }
        });
        getContentPane().add(jPFMdp, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 240, 200, -1));

        jRBPraticien.setText("Praticien");
        jRBPraticien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBPraticienActionPerformed(evt);
            }
        });
        getContentPane().add(jRBPraticien, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        jRBVisiteur.setText("Visiteur");
        jRBVisiteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBVisiteurActionPerformed(evt);
            }
        });
        getContentPane().add(jRBVisiteur, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, -1, -1));

        jLlogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoGSB.jpg"))); // NOI18N
        getContentPane().add(jLlogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 120, 78));

        jLFond.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondClair.png"))); // NOI18N
        getContentPane().add(jLFond, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 435, 222));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Action effectuée lorsque le l'utilisateur clique sur le bouton "Valider"
     * @param evt L'événement d'action déclenché par le clic sur le bouton
     */
    private void jBtValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtValiderActionPerformed
        // Récupération de l'identifiant dans le champ de saisi "Identifiant"
        String identifiant = jTFMail.getText();
        // Récupération du mot de passe dans le champ de saisi du mot de passe
        String mdp = String.valueOf(jPFMdp.getPassword()); 
        Icon icone;
        
        // Tableau d'informations de la connexion utilisateur
        String[] connexion;
        
        // les différents cas de valeur du type d'utilisateur
        switch (this.typeUtilisateur) {
            case 1: // Connexion praticien
                connexion = praticiens.rechercherPraticien(identifiant, mdp);
                break;
            case 2: // Connexion visiteur
                connexion = visiteurs.rechercherVisiteur(identifiant, mdp);
                break;
            default: // Profil non spécifié
                connexion = null;
                break;
        }
        
        
        if (this.typeUtilisateur != 0 && connexion[0] != null) { // Le profil est précisé et les identifiants sont valides
            icone = new javax.swing.ImageIcon(getClass().getResource("/images/valider.png"));
            // Affichage d'un message de confirmation de l'authentification
            JOptionPane.showMessageDialog(null, "Authentification réussie !", "Résultat d'authentification", JOptionPane.OK_OPTION, icone);
            // Préparation de la fenêtre du catalogue de médicaments
            JffMedicament catalogue = new JffMedicament(connexion, this.typeUtilisateur);
            // Ouverture de la fenêtre de catalogue
            catalogue.setVisible(true);
            // Fermeture de la fenêtre de connexion
            dispose();
        } else {
            icone = new javax.swing.ImageIcon(getClass().getResource("/images/quitter.png"));
            if (this.typeUtilisateur == 0) { // Il n'y a pas de profil utilisateur spécifié
                // Affichage d'un message d'erreur indiquant la précision du profil
                JOptionPane.showMessageDialog(null, "Vous devez selectionner un profil de connexion !", "Résultat d'authentification", ERROR_MESSAGE, icone);
            } else {
                // Affichage d'un message d'erreur indiquant des problèmes d'identification
                JOptionPane.showMessageDialog(null, "Erreur d'authentification, vérifiez vos identifiants !", "Résultat d'authentification", ERROR_MESSAGE, icone);
            }
            
        }
    }//GEN-LAST:event_jBtValiderActionPerformed

    /**
     * Action effectuée lorsque le l'utilisateur clique sur le bouton "Quitter"
     * @param evt L'événement d'action déclenché par le clic sur le bouton
     */
    private void jBtQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtQuitterActionPerformed
        // Arrêt du système
        System.exit(0);
    }//GEN-LAST:event_jBtQuitterActionPerformed

    /**
     * Action effectuée lorsque l'utilisateur clique sur le bouton radio "Praticien"
     * @param evt L'événement d'action déclenché par le clic sur le bouton
     */
    private void jRBPraticienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBPraticienActionPerformed
        jRBPraticien.setSelected(true);
        this.typeUtilisateur = 1;
    }//GEN-LAST:event_jRBPraticienActionPerformed

    /**
     * Action effectuée lorsque l'utilisateur clique sur le bouton radio "Visiteur"
     * @param evt L'événement d'action déclenché par le clic sur le bouton
     */
    private void jRBVisiteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBVisiteurActionPerformed
        jRBVisiteur.setSelected(true);
        this.typeUtilisateur = 2;
    }//GEN-LAST:event_jRBVisiteurActionPerformed

    /**
     * Action effectuée lorsque l'utilisateur presse la touche "Entrée" de son clavier pendant la saisie du mot de passe
     * @param evt L'événement d'action déclenché par la pression sur la touche "Entrée" du clavier
     */
    private void jPFMdpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPFMdpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // La touche pressée est la touche "Entrée"
            
            // On valide les entrées en indiquant un clique sur le bouton "Valider"
            jBtValider.doClick();
        }
    }//GEN-LAST:event_jPFMdpKeyPressed

    /**
     * Action effectuée lorsque l'utilisateur presse la touche "Entrée" de son clavier pendant la saisie de l'identifiant
     * @param evt L'événement d'action déclenché par la pression sur la touche "Entrée" du clavier
     */
    private void jTFMailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFMailKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) { // La touche pressée est la touche "Entrée"
            
            // On déplace le focus de la saisie de l'identifiant à la saisie du mot de passe
            jPFMdp.requestFocus();
        }
    }//GEN-LAST:event_jTFMailKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JffConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JffConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JffConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JffConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JffConnexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtQuitter;
    private javax.swing.JButton jBtValider;
    private javax.swing.JLabel jLAuthentification;
    private javax.swing.JLabel jLFond;
    private javax.swing.JLabel jLMail;
    private javax.swing.JLabel jLMdp;
    private javax.swing.JLabel jLlogo;
    private javax.swing.JPasswordField jPFMdp;
    private javax.swing.JRadioButton jRBPraticien;
    private javax.swing.JRadioButton jRBVisiteur;
    private javax.swing.JTextField jTFMail;
    // End of variables declaration//GEN-END:variables
}
